<!DOCTYPE html>
<html>
<head>
    <title>Textito - Convertidor de Texto a Voz</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <!-- Template del reproductor -->
    <template id="audio-player-template">
        <div class="audio-player">
            <div class="player-header">
                <span class="time-display">
                    <span class="current-time">0:00</span> / 
                    <span class="total-time">0:00</span>
                </span>
                <div class="speed-control">
                    <button class="speed-btn active" data-speed="1">1x</button>
                    <button class="speed-btn" data-speed="1.25">1.25x</button>
                    <button class="speed-btn" data-speed="1.75">1.75x</button>
                </div>
            </div>

            <div class="progress-bar">
                <div class="progress-track">
                    <div class="progress-fill"></div>
                </div>
            </div>

            <div class="player-controls">
                <button class="control-btn rewind">-15s</button>
                <button class="control-btn play-pause">‚ñ∂</button>
                <button class="control-btn forward">+15s</button>
            </div>
        </div>
    </template>

    <!-- Contenido principal -->
    <div class="container">
        <h1>Textito</h1>
        <p class="subtitle">Convertidor de Texto a Voz</p>
        
        <form id="convert-form">
            <textarea 
                name="text" 
                id="text-input"
                placeholder="Escribe tu texto aqu√≠..."
                required
                maxlength="40000"
                oninput="updateCharCount()"></textarea>
            
            <div class="controls">
                <div class="right-controls">
                    <span id="char-count">0/40000 caracteres</span>
                    <div id="progress" class="progress-container" style="display: none;">
                        <div class="progress-text">Generando audio...</div>
                        <div class="spinner"></div>
                    </div>
                    <button type="submit" id="submit-btn">Convertir a Audio</button>
                </div>
            </div>
        </form>
        <div id="error-message" class="error"></div>
        
        <!-- Contenedor para los reproductores -->
        <div class="audio-players-container"></div>

        <!-- Secci√≥n de transcripci√≥n de audio -->
        <div class="transcription-section">
            <h2>Convertir Audio a Texto</h2>
            <form id="transcribe-form" class="upload-form">
                <div class="file-upload">
                    <input type="file" 
                           id="audio-file" 
                           accept="audio/x-m4a,audio/m4a,audio/mp3,audio/wav,audio/mpeg,audio/webm,audio/aac" 
                           required>
                    <label for="audio-file" class="upload-label">
                        <span>üé§</span>
                        <span>Seleccionar archivo de audio</span>
                    </label>
                </div>
                <button type="submit" class="submit-btn">Transcribir</button>
            </form>
            <div id="transcription-result" class="result-box"></div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="/js/audioPlayer.js"></script>
    <script src="/js/tests.js"></script>
    <script src="/js/audioTranscriber.js"></script>
    <script>
        // Event listener del formulario
        document.getElementById('convert-form').addEventListener('submit', async function(event) {
            event.preventDefault();
            const text = document.getElementById('text-input').value;
            if (!text.trim()) {
                showError('Por favor, ingresa alg√∫n texto');
                return;
            }

            showProgress();
            clearError();

            try {
                const response = await fetch('/convert-stream', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ text: text })
                });

                if (!response.ok) {
                    throw new Error('Error en la conversi√≥n');
                }

                const reader = response.body.getReader();
                const decoder = new TextDecoder();

                while (true) {
                    const { value, done } = await reader.read();
                    if (done) break;

                    const chunk = decoder.decode(value);
                    const events = chunk.split('\n\n');

                    for (const event of events) {
                        if (event.startsWith('data: ')) {
                            const data = JSON.parse(event.slice(6));
                            
                            if (data.error) {
                                showError(data.error);
                                continue;
                            }

                            if (data.audioContent) {
                                createAudioPlayer({
                                    url: `data:audio/mp3;base64,${data.audioContent}`,
                                    partNumber: data.partNumber,
                                    totalParts: data.totalParts
                                });
                            }
                        }
                    }
                }
            } catch (error) {
                showError(error.message);
            } finally {
                hideProgress();
            }
        });

        function updateProgress(current, total) {
            if (!total) return;
            const progressText = document.querySelector('.progress-text');
            progressText.textContent = `Generando audio... ${current}/${total}`;
        }

        function showProgress() {
            document.getElementById('progress').style.display = 'flex';
            document.getElementById('submit-btn').disabled = true;
        }

        function hideProgress() {
            document.getElementById('progress').style.display = 'none';
            document.getElementById('submit-btn').disabled = false;
        }

        function updateCharCount() {
            const text = document.getElementById('text-input').value;
            const length = text.length;
            document.getElementById('char-count').textContent = `${length}/40000 caracteres`;
        }

        function showError(message) {
            const errorElement = document.getElementById('error-message');
            errorElement.textContent = message;
        }

        function clearError() {
            const errorElement = document.getElementById('error-message');
            errorElement.textContent = '';
        }

        function createAudioPlayer(data) {
            if (!data || !data.url) {
                console.error('Datos inv√°lidos para crear el reproductor:', data);
                return;
            }
            
            try {
                new AudioPlayer({
                    url: data.url,
                    partNumber: data.partNumber,
                    totalParts: data.totalParts
                });
            } catch (error) {
                console.error('Error al crear el reproductor:', error);
                showError('Error al crear el reproductor de audio');
            }
        }
    </script>
</body>
</html> 